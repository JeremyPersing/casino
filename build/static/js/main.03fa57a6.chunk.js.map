{"version":3,"sources":["components/Nav.js","coin-flip.gif","components/Home.js","components/Blackjack.js","components/Coinflip.js","components/Dice.js","components/Crash.js","components/Roulette.js","components/Login.js","components/Register.js","components/MoreCoins.js","App.js","index.js"],"names":["Nav","props","history","useHistory","useState","isOpen","setIsOpen","playerInfoLocation","setPlayerInfoLocation","playerInfoVisibility","setPlayerInfoVisibility","Navbar","light","expand","style","fontSize","NavbarToggler","onClick","setTimeout","Collapse","navbar","className","NavItem","listStyleType","to","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","cursor","setUsersName","localStorage","clear","push","visibility","NavbarText","color","usersName","marginBottom","src","alt","height","parseFloat","coins","toFixed","Home","SpinningCoin","Blackjack","userTotal","setUserTotal","compTotal","setCompTotal","userCardArr","setUserCardArr","suits","tens","randomCard","Math","floor","random","initialDeal","document","getElementById","cardOne","placePlayerCards","cardTwo","arr","oldArr","total","determineTotal","dealerTotal","sort","a","b","i","length","playerTotal","dCards","dTotal","hit","compareTotals","endCoins","console","log","wager","setCoins","playAgain","Axios","put","userName","then","response","catch","error","removeCards","player","num","cardSuit","innerHTML","playerCardDiv","childNodes","currChildElement","removeChild","dealerCardDiv","id","onSubmit","event","preventDefault","currCoins","post","res","err","htmlFor","name","type","step","min","max","required","onChange","setWager","target","value","card","Coinflip","coinToss","doc","flip","guess","result","endResult","outcome","Dice","state","rolledNum","rollAll","bind","compareSingle","rollDoneCallback","compareTwoTimes","handleWagerChange","play","this","reactDice","setState","determineOutcome1","guessedNum","determineOutcome2","determineOutcome3","numDice","defaultRoll","outline","faceColor","dotColor","dieSize","margin","rollDone","ref","dice","disableIndividual","rollTime","compareFourTimes","Component","Crash","rMultiplier","setRMultipler","userBet","setUserBet","decideGame","usersPick","randomMultiplier","Number","random1","createRandomNumbers","multFactor","am4core","am4themes_dataviz","am4themes_animated","chart","am4charts","hiddenState","properties","opacity","innerRadius","axis","xAxes","strictMinMax","renderer","grid","template","stroke","getFor","strokeOpacity","colorSet","range0","axisRanges","create","endValue","axisFill","fillOpacity","fill","getIndex","zIndex","range1","range2","hand","hands","randomValue","showValue","cubicOut","createChart","width","Roulette","mustSpin","setMustSpin","prizeNumber","setPrizeNumber","data","option","backgroundColor","textColor","handleSpinClick","userPick","newPrizeNumber","winningColor","toUpperCase","determineOutcome","class","mustStartSpinning","onStopSpinning","Login","usersPassword","setUsersPassword","e","alert","password","setUserCoins","setItem","Register","userNameReg","setUserNameReg","passwordReg","setPasswordReg","confirmPasswordReg","setConfirmPasswordReg","userNameExists","checkValidCredentials","swapForms","MoreCoins","amount","App","useEffect","loggedInUser","getItem","exact","path","render","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.03fa57a6.chunk.js","sourcesContent":["import { Link, useHistory } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport '../CSS/styles.css';\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    Nav as FormerNav,\r\n    NavItem,\r\n    UncontrolledDropdown,\r\n    DropdownToggle,\r\n    DropdownMenu,\r\n    DropdownItem,\r\n    NavbarText\r\n  } from 'reactstrap';\r\n\r\n\r\n\r\nconst Nav = (props) => {\r\n    const history = useHistory();\r\n    // Used for the hamburger menu icon\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    // Used for when the navbar is open\r\n    const [playerInfoLocation, setPlayerInfoLocation] = useState('')\r\n    // Used for when the navbar is closing\r\n    const [playerInfoVisibility, setPlayerInfoVisibility] = useState('visible');\r\n\r\n    const toggle = () => {\r\n        // When the hamburger icon is open then is open turns true && vice versa\r\n        setIsOpen(!isOpen)\r\n        // Set the player info to the middle when open\r\n        if (!isOpen) {\r\n            setPlayerInfoLocation('mx-auto');\r\n        }\r\n        // otherwise put it back on the right\r\n        else {\r\n            setPlayerInfoVisibility('hidden')\r\n            setTimeout(() => {\r\n                setPlayerInfoLocation('');\r\n                setPlayerInfoVisibility('visible');\r\n        }, 370);\r\n        }\r\n    };\r\n\r\n    const logOutUser = () => {\r\n        props.setUsersName('');\r\n        localStorage.clear();\r\n        history.push('/');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar light expand='md' style={{fontSize: '110%'}}>\r\n                <NavbarToggler onClick={toggle} />\r\n                <Collapse isOpen={isOpen} navbar>\r\n                    <FormerNav className='former-nav mr-auto' navbar>\r\n                        <NavItem style={{listStyleType: 'none'}}>\r\n                            <Link className='nav-link' to='/home'>Home</Link>\r\n                        </NavItem>\r\n                        <UncontrolledDropdown style={{listStyleType: 'none'}} nav inNavbar>\r\n                            <DropdownToggle className='nav-link' nav caret>\r\n                                Play\r\n                            </DropdownToggle>\r\n                            <DropdownMenu className='text-center' right>\r\n                                <DropdownItem>\r\n                                    <Link className='nav-link' to='/blackjack'>Blackjack</Link>\r\n                                </DropdownItem>\r\n                                <DropdownItem>\r\n                                    <Link className='nav-link' to='/coinflip'>Coin Flip</Link>\r\n                                </DropdownItem>\r\n                                <DropdownItem>\r\n                                    <Link className='nav-link' to='/crash'>Crash</Link>\r\n                                </DropdownItem>\r\n                                <DropdownItem>\r\n                                    <Link className='nav-link' to='/dice'>Dice Roll</Link>\r\n                                </DropdownItem>\r\n                                <DropdownItem>\r\n                                    <Link className='nav-link' to='/roulette'>Roulette</Link>\r\n                                </DropdownItem>\r\n                            </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                        <NavItem style={{listStyleType: 'none'}}>\r\n                        <Link className='nav-link' to='/morecoins'>More Coins</Link>\r\n                        </NavItem>\r\n                        <NavItem style={{'listStyleType': 'none'}}>\r\n                            <p \r\n                            className='nav-link' \r\n                            style={{cursor: 'pointer'}}\r\n                            onClick={logOutUser}\r\n                            >Log Out\r\n                            </p>\r\n                        </NavItem>\r\n                    </FormerNav>\r\n                </Collapse>\r\n                <div style={{visibility: `${playerInfoVisibility}`}} className={playerInfoLocation} >\r\n                    <NavbarText style={{color: '#333'}}>\r\n                        <p>{props.usersName}</p>\r\n                    </NavbarText>\r\n                    <NavbarText style={{color: '#333', marginBottom: '13px'}}>\r\n                        <img src={process.env.PUBLIC_URL \r\n                        + '/images/bitcoinlogo.png'} \r\n                        alt='Coins Logo' \r\n                        style={{height: '25px', color: '#333'}}>\r\n                        </img>\r\n                        {parseFloat(props.coins).toFixed(2)}\r\n                    </NavbarText>\r\n                </div>\r\n            </Navbar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav;","export default __webpack_public_path__ + \"static/media/coin-flip.72d16558.gif\";","import React from 'react';\nimport Nav from './Nav';\nimport { Link } from 'react-router-dom';\nimport '../CSS/styles.css';\nimport SpinningCoin from '../coin-flip.gif';\n\nconst Home = (props) => {\n\n  return (\n    <div>\n      <Nav coins={props.coins} usersName={props.usersName} setUsersName={props.setUsersName}/>\n      <h1>Welcome to Gambler's Paradise</h1>\n      <p>For all of these games, input the amount of coins that you want to bet.</p>\n      <div>\n        <Link className='text-decoration-none home-link' to='/blackjack'><h2 className='mt-4'>Blackjack</h2></Link>\n        <div className='mt-4 mb-4'>\n        <Link to='/blackjack'>\n          <img src={process.env.PUBLIC_URL + '/images/Blackjack-Strat-EDIT.jpg'} className='responsive' alt='blackjack-poster'></img>\n        </Link>\n        </div>\n        <p>\n          <b>Rules: </b>\n          <br></br>\n          In Blackjack, place your bet and get dealt two cards. From this point if you want \n          a higher total, click the hit button. If you think that you have a winning total,\n          click the stand button. At this point, the dealer will deal themself a quantity of\n          cards. If you get 21 and the dealer doesn't, you will receive 2.5x your bet. Otherwise,\n          if get a higher total than the dealer and your total doesn't exceed 21, you will \n          win what you bet. For instance, if you start with 100 coins, wager 50 coins and \n          win by getting 21, you will now have 200 coins. If you win without getting 21, then \n          you will have a total of 150 coins.\n        </p>\n      </div>\n      <div>\n        <Link className='text-decoration-none home-link' to='/coinflip'><h2 className='mt-4'>Coin Flip</h2></Link>\n        <div className='mt-4 mb-4'>\n          <Link to='/coinflip'>\n            <img src={SpinningCoin} className='responsive' alt='flipping coin gif'></img>\n          </Link>\n        </div>\n        <p>\n          <b>Rules: </b>\n          <br></br>\n          The game of Coin Flip is very simple. You place your bet and then choose heads or tails.\n          If you win the game you will double your wager.\n        </p>\n      </div>\n      <div>\n        <Link className='text-decoration-none home-link' to='/dice'><h2 className='mt-4'>Dice Roll</h2></Link>\n        <div className='mt-4 mb-4'>\n          <Link to='/dice'>\n            <img src={process.env.PUBLIC_URL + '/images/dice.png'} className='responsive' alt='dice'></img>\n          </Link>\n        </div>\n        <p>\n          <b>Rules: </b>\n          <br></br>\n          In Dice Roll, you will place a bet and you have the ability to choose between\n          three different multiplier options. Those options include 12x, 4x, and 2x multipliers.\n        </p>\n      </div>\n      <div>\n        <Link className='text-decoration-none home-link' to='/crash'><h2 className='mt-4'>Crash</h2></Link>\n        <div className='mt-4 mb-4'>\n          <Link to='/crash'>\n            <img src={process.env.PUBLIC_URL + '/images/crash-chart.jpg'} className='responsive' alt='dice'></img>\n          </Link>\n        </div>\n        <p>\n          <b>Rules: </b>\n          <br></br>\n          In Crash, you have the ability to choose what multiplier you want. The minimum\n          multiplier is 2.5x and the maximum multiplier is 15x. Once you place your bet, the meter\n          will then fall upon a given multiplier. If your multiplier is less than or equal to what the multiplier \n          falls upon, then you will win an amount of coins that equates to your bet multiplied by the multiplier.\n          Otherwise, you will lose your initial bets.\n        </p>\n      </div>\n      <div>\n        <Link className='text-decoration-none home-link' to='/roulette'><h2 className='mt-4'>Roulette</h2></Link>\n        <div className='mt-4 mb-4'>\n          <Link to='/roulette'>\n            <img src={process.env.PUBLIC_URL + '/images/roulette-wheel.jpg'} className='responsive' alt='dice'></img>\n          </Link>\n        </div>\n        <p>\n          <b>Rules: </b>\n          <br></br>\n          In Roulette, you have to input a bet and then pick either red, black, or green.\n          The multipliers are on the buttons associated with each pick. Choose wisely, as the\n          probablity of the options differ.\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React, {useState} from 'react';\r\nimport Nav from './Nav';\r\nimport Axios from 'axios';\r\n\r\nconst Blackjack = (props) => {\r\n    const [userTotal, setUserTotal] = useState(0);  // Used to hold and display user's total\r\n    const [compTotal, setCompTotal] = useState(0);  // Used to hold and display comp's total\r\n    const [userCardArr, setUserCardArr] = useState([]);  // Holds the user's card values\r\n    const suits = ['C', 'D', 'H', 'S']; // Array for the suits of cards\r\n    const tens = ['10', 'J', 'Q', 'K']; // Array for cards that hold a value of 10\r\n\r\n    const play = (event) => {\r\n        // Doesn't reload page\r\n        event.preventDefault();\r\n        document.getElementById('playBlackjack').style = 'visibility: visible';\r\n        document.getElementById('betForm').style = 'visibility: hidden';\r\n        \r\n        // Deduct the amount of coins wagered from the total amount of coins\r\n        let currCoins = props.coins - props.wager;\r\n        console.log(currCoins);\r\n        props.setCoins(currCoins);\r\n        Axios.post('/user', {\r\n            userName: props.userName,\r\n            coins: currCoins\r\n        }).then((res) => {\r\n            console.log(res);\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    const handleWagerChange = (event) => {\r\n        props.setWager(event.target.value);\r\n    }\r\n\r\n    const playBlackJack = () => {\r\n        let playButton = document.getElementById('playBlackjack');\r\n        // Remove the play button\r\n        playButton.style = 'visibility: hidden'  \r\n        // Display the Hit and Stand Buttons\r\n        document.getElementById('hitAndStand').style = 'visibility: visible';\r\n        initialDeal();\r\n    }\r\n\r\n    // Funciton that returns a random value between 1-10\r\n    const randomCard = () => {\r\n        let num = Math.floor(Math.random() * 10 + 1);\r\n        return num;\r\n    }\r\n\r\n    // Function that deals the first two cards for the player\r\n    const initialDeal = () => {\r\n        document.getElementById('userTotal').style = 'visibility: visible';\r\n        // Deal two cards\r\n        let cardOne = randomCard();\r\n        placePlayerCards('player', cardOne);\r\n        let cardTwo = randomCard();\r\n        placePlayerCards('player', cardTwo);\r\n\r\n        // Create a new array and push the cards into them\r\n        let arr = [];\r\n        arr.push(cardOne);\r\n        arr.push(cardTwo);\r\n\r\n        // Store the cards in the user's cards array\r\n        setUserCardArr(oldArr => [...oldArr, cardOne]);\r\n        setUserCardArr(oldArr => [...oldArr, cardTwo]);\r\n\r\n        // Get the total player's current total\r\n        let total = determineTotal(arr);\r\n        setUserTotal(total);\r\n        if (total === 21) {\r\n            setTimeout(() => {dealerTotal(total)}, 200);\r\n        }\r\n    }\r\n    \r\n\r\n    // Function that adds one more cards to the player's total\r\n    const hit = () => {\r\n        // Deal another card\r\n        let card = randomCard();\r\n        placePlayerCards('player', card);\r\n\r\n        \r\n        // Place the card in the user's card array\r\n        setUserCardArr(arr => [...arr, card]);\r\n            \r\n        // Create a clone of the user's card array and push the new card into it\r\n        let arr = [...userCardArr];\r\n        arr.push(card);\r\n\r\n        // Get the user's new total\r\n        let total = determineTotal(arr);\r\n        setUserTotal(total);\r\n        \r\n        // Account for if that new card will equal 21 or be over it\r\n        setTimeout(() => {\r\n            if (total === 21) {\r\n                dealerTotal(total);\r\n            }\r\n            else if (total > 21) {\r\n                setTimeout(() => {\r\n                    setTimeout(() => {playAgain()}, 1000);\r\n                }, 100);\r\n            }\r\n        }, 100)\r\n    }\r\n\r\n    // Function that ends the game and reveals the dealer's total\r\n    const stand = () => {\r\n        dealerTotal(userTotal); // Determine the dealer's total\r\n    }\r\n\r\n    // Function that determines the value of the cards\r\n    const determineTotal = (arr) => {\r\n        let total = 0;  // Return variable\r\n        \r\n        // Order the array in decending order\r\n        // We need to know the value of prior cards to determine\r\n        // if the ace should be 1 or 11\r\n        arr.sort(function(a, b){return b - a});\r\n        \r\n        // Go through the array to see if there are any aces (1)\r\n        for (let i = 0; i < arr.length; i++) {\r\n            if (arr[i] === 1 && total <= 10) {\r\n                arr[i] = 11; // Make the ace an 11 if the prior cards add up to 10 or less\r\n            }\r\n            total += arr[i]; // add the cards values together\r\n        }\r\n\r\n        return total;\r\n    } \r\n\r\n    const dealerTotal = (playerTotal) => {\r\n        // The dealer must deal themself two cards\r\n        let dCards = [];\r\n        let cardOne = randomCard();\r\n        placePlayerCards('dealer', cardOne)\r\n        let cardTwo = randomCard();\r\n        placePlayerCards('dealer', cardTwo);\r\n        dCards.push(cardOne);\r\n        dCards.push(cardTwo);\r\n        let dTotal = determineTotal(dCards);\r\n            \r\n        // The dealer will only hit if the player has not busted\r\n        if (userTotal <= 21) {\r\n            // The dealer will hit only if there total is less than 17\r\n            while (dTotal < 17) {\r\n                let hit = randomCard();\r\n                placePlayerCards('dealer', hit);\r\n                dCards.push(hit);\r\n                dTotal = determineTotal(dCards);\r\n            }\r\n        }\r\n        document.getElementById('dealerContainer').style = 'visibility: visible';\r\n        setCompTotal(dTotal);\r\n        \r\n        setTimeout(() => {compareTotals(playerTotal, dTotal)}, 100);\r\n    }\r\n\r\n    const compareTotals = (playerTotal, dealerTotal) => {\r\n        let endCoins = props.coins;  // Amount of coins at the end of the round\r\n        console.log(endCoins);\r\n        // The user has 21 and the dealer does not\r\n        if (playerTotal === 21 && dealerTotal !== 21) {\r\n            endCoins = props.coins + (props.wager * 2.5);\r\n            console.log(endCoins)\r\n            props.setCoins(endCoins);\r\n        }\r\n        // Both the user and dealer have the same total\r\n        else if (playerTotal === dealerTotal) {\r\n            // Need to multiply by 1 otherwise js will read wager as a string and concatenate both\r\n            endCoins = props.coins + (props.wager * 1)\r\n            console.log(endCoins)\r\n            props.setCoins(endCoins);\r\n        }\r\n        // The user has a total under 21 and a higher total than the dealer\r\n        else if (playerTotal < 21 && playerTotal > dealerTotal) {\r\n            endCoins = props.coins + (props.wager * 2);\r\n            console.log(endCoins)\r\n            props.setCoins(endCoins);\r\n        }\r\n        // The user did not bust but the dealer did\r\n        else if (playerTotal < 21 && dealerTotal > 21) {\r\n            endCoins = props.coins + (props.wager * 2);\r\n            console.log(endCoins)\r\n            props.setCoins(props.coins + (props.wager * 2));\r\n        }\r\n        setTimeout(() => {\r\n            playAgain();\r\n            Axios.put('/user', {\r\n                userName: props.usersName, \r\n                coins: endCoins\r\n            }).then((response) => {\r\n                console.log(response);\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n        }, 2000);\r\n    }\r\n\r\n    const playAgain = () => {\r\n        document.getElementById('betForm').style = 'visibility: visible';\r\n        document.getElementById('buttonsDiv').style = 'visibility: hidden';\r\n        document.getElementById('hitAndStand').style = 'visibility: hidden';\r\n        setUserTotal(0);  // Set user total to 0 for replays\r\n        setCompTotal(0);  // Set comp total to 0 for replays\r\n        setUserCardArr([]); // set users card to empty for replays\r\n        removeCards(); // Remove the current cards\r\n    }\r\n\r\n    // Places the cards onto the screen\r\n    // player argument should either be player or dealer\r\n    const placePlayerCards = (player, num) => {\r\n\r\n        // Get the suit of the card\r\n        let random = Math.floor(Math.random() * 4);\r\n        let cardSuit = suits[random];\r\n\r\n        // If num is ten it can be 10, J, Q, or K\r\n        if (num === 10) {\r\n            num = tens[random];\r\n        }\r\n\r\n        // Place the card in the playing area\r\n        let cardDiv = document.getElementById(player + 'Cards');\r\n        cardDiv.innerHTML += `<img src=${process.env.PUBLIC_URL + '/images/Cards/' + num  + cardSuit + '.png'} height='200px' alt=${num}></img>`\r\n    }\r\n\r\n    const removeCards = () => {\r\n        document.getElementById('userTotal').style = 'visibility: hidden';\r\n        document.getElementById('dealerContainer').style = 'visibility: hidden';\r\n\r\n        let playerCardDiv = document.getElementById('playerCards');\r\n        while (playerCardDiv.childNodes.length > 0) {\r\n            let currChildElement = playerCardDiv.childNodes[playerCardDiv.childNodes.length - 1];\r\n            playerCardDiv.removeChild(currChildElement);\r\n        }\r\n        let dealerCardDiv = document.getElementById('dealerCards');\r\n        while (dealerCardDiv.childNodes.length > 0) {\r\n            let currChildElement = dealerCardDiv.childNodes[dealerCardDiv.childNodes.length - 1];\r\n            dealerCardDiv.removeChild(currChildElement);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Nav coins={props.coins} usersName={props.usersName} setUsersName={props.setUsersName}/>\r\n            <h1>Blackjack</h1>\r\n            <div id='betForm'>\r\n                <form onSubmit={play}>\r\n                    <div className='bet-input'>\r\n                        <label htmlFor='bet' className='font-weight-bold'>Bet</label>\r\n                        <input name='bet' className='form-control' type='number'step='.01' min={.01} max={props.coins} required onChange={handleWagerChange} id='wager'></input>\r\n                    </div>\r\n                    <input className='btn btn-dark pl-3 pr-3 mt-2' type='submit' value='Place Bet'></input>\r\n                </form>\r\n            </div>\r\n            <div id='buttonsDiv' style={{visibility: 'hidden'}}>\r\n                <button id='playBlackjack' className='btn btn-dark pl-3 pr-3 mt-2' onClick={playBlackJack}>Play</button>\r\n                <div id='hitAndStand' style={{visibility: 'hidden'}}>\r\n                    <button id='hitButton' className='btn btn-dark pl-3 pr-3 mt-2 mr-2' onClick={hit}>Hit</button>\r\n                    <button id='stand' className='btn btn-dark pl-3 pr-3 mt-2' onClick={stand}>Stand</button>\r\n                </div>\r\n            </div>\r\n            <div className='form-row'>\r\n                <div className='col-lg-4 offset-lg-2'>\r\n                    <h4 id='userTotal' style={{visibility: 'hidden'}}>Your total: {userTotal}</h4>\r\n                    <div id='playerCards'></div>\r\n                </div>\r\n                <div className='col-lg-4' id='dealerContainer' style={{visibility: 'hidden'}}>\r\n                    <h4>Dealer's Total: {compTotal}</h4>\r\n                    <div id='dealerCards'></div>\r\n                </div>\r\n            </div>    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Blackjack;","import React from 'react';\r\nimport '../CSS/coin-animation.css';\r\nimport Nav from './Nav';\r\nimport Axios from 'axios';\r\n\r\nconst Coinflip = (props) => {\r\n\r\n\r\n    const outcome = (flip, guess) => {\r\n        // 0 is heads and 1 is tails\r\n        if (flip === guess) {\r\n            let result = props.wager * 2;\r\n            \r\n            let endResult = props.coins + result;\r\n            props.setCoins(endResult);\r\n\r\n            Axios.put('/user', {\r\n                userName: props.usersName,\r\n                coins: endResult\r\n            }).then((response) => {\r\n                console.log(response)\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            })\r\n        }\r\n    }\r\n\r\n    const coinToss = (num) => {\r\n        document.getElementById('buttonsDiv').style = 'visibility: hidden';\r\n        document.getElementById('betForm').style = 'visibility: visible';\r\n        let doc = document.getElementById('outcome');\r\n        // Generate a random number between 0 and 1\r\n        let random = Math.floor(Math.random() * 2);\r\n        // If the random number is 0 display heads\r\n        if (random === 0) {\r\n            doc.innerHTML = `<img src=${process.env.PUBLIC_URL + '/images/Coins/heads.png'} class='animate-coin' height='200px' alt='heads'></img>`;\r\n        }\r\n        else {\r\n            doc.innerHTML = `<img src=${process.env.PUBLIC_URL + '/images/Coins/tails.png'} class='animate-coin' height='200px' alt='tails'></img>`;\r\n        }\r\n\r\n        // Determine if the user won or not\r\n        outcome(random, num);\r\n    }\r\n\r\n    const play = (event) => {\r\n        // Doesn't reload page\r\n        event.preventDefault();\r\n        \r\n        // Deduct the amount of coins wagered from the total amount of coins\r\n        let currCoins = props.coins - props.wager;\r\n\r\n        Axios.put('/user', {\r\n                userName: props.usersName,\r\n                coins: currCoins\r\n            }).then((response) => {\r\n                console.log(response)\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            })\r\n           \r\n        document.getElementById('betForm').style = 'visibility: hidden';\r\n        props.setCoins(currCoins);\r\n        // Change the buttons to visible\r\n        document.getElementById('buttonsDiv').style = 'visibility: visible';\r\n    }\r\n\r\n    const handleWagerChange = (event) => {\r\n        props.setWager(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Nav coins={props.coins} usersName={props.usersName} setUsersName={props.setUsersName}/>\r\n            <h1>Coin Flip</h1>\r\n            <div className='mt-4 mb-4' id='outcome'>\r\n                <img src={process.env.PUBLIC_URL + '/images/Coins/tails.png'} style={{height: '200px'}} alt='heads'></img>\r\n            </div>\r\n            <form className='form-group' onSubmit={play}>\r\n                <div id='betForm'>\r\n                    <div className='bet-input'>\r\n                        <label className='font-weight-bold' htmlFor='bet'>Bet</label>\r\n                        <input className='form-control' name='bet' type='number'step='.01' min={.01} max={props.coins} required onChange={handleWagerChange} id='wager'></input>\r\n                    </div>\r\n                    <input className='btn btn-dark pl-3 pr-3 mt-2' type='submit' value='Place Bet'></input>\r\n                </div>\r\n            </form>\r\n            <div id='buttonsDiv' style={{visibility: 'hidden'}}>\r\n                <button className='btn btn-dark mr-2' onClick={() => {coinToss(0)}}>Heads</button>\r\n                <button className='btn btn-dark ml-2' onClick={() => {coinToss(1)}}>Tails</button>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Coinflip;","import React, { Component } from 'react'\r\nimport ReactDice from 'react-dice-complete';\r\nimport 'react-dice-complete/dist/react-dice-complete.css';\r\nimport Nav from './Nav';\r\nimport Axios from 'axios';\r\n\r\nclass Dice extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rolledNum: ''\r\n        }\r\n        // Binding methods\r\n        this.rollAll = this.rollAll.bind(this)\r\n        this.compareSingle = this.compareSingle.bind(this);\r\n        this.rollDoneCallback = this.rollDoneCallback.bind(this);\r\n        this.compareTwoTimes = this.compareTwoTimes.bind(this);\r\n        this.handleWagerChange = this.handleWagerChange.bind(this);\r\n        this.play = this.play.bind(this);\r\n    }\r\n\r\n    handleWagerChange(event) {\r\n        this.props.setWager(event.target.value);\r\n    }\r\n\r\n    play(event) {\r\n        event.preventDefault();\r\n        // Make play buttons visible and make bet button invisible\r\n        document.getElementById('buttonsDiv').style = 'visibility: visible';\r\n        document.getElementById('betForm').style = 'visibility: hidden';\r\n        // Deduct current bet from current amount of coins\r\n        let currCoins = this.props.coins - this.props.wager;\r\n        \r\n        Axios.put('/user', {\r\n            userName: this.props.usersName,\r\n            coins: currCoins\r\n        }).then((res) => {\r\n            console.log(res)\r\n        }).catch((err) => {\r\n            console.log(err)\r\n        })\r\n\r\n        this.props.setCoins(currCoins);\r\n    }\r\n\r\n    // Rolls the dice\r\n    rollAll() {\r\n        this.reactDice.rollAll()\r\n    }\r\n    \r\n    // Sets the rolled number once the dice is done spinning\r\n    rollDoneCallback(num) {\r\n        this.setState({rolledNum: num});\r\n    }\r\n\r\n    // Compares when the player made a bet on a single number\r\n    compareSingle(num) {\r\n        // Make play buttons invisible and make bet button visible\r\n        document.getElementById('buttonsDiv').style = 'visibility: hidden';\r\n        document.getElementById('betForm').style = 'visibility: visible';\r\n        this.rollAll();\r\n        // Set the timeout to allow for the rolledNum state to be set\r\n        setTimeout(() => {this.determineOutcome1(this.state.rolledNum, num)}, 1000);\r\n    }\r\n\r\n    // Determines the outcome on a single number bet\r\n    determineOutcome1(rolledNum, guessedNum) {\r\n        if (rolledNum === guessedNum) {\r\n            let endResult = this.props.coins + (this.props.wager * 12);\r\n            this.props.setCoins(endResult)\r\n\r\n            Axios.put('/user', {\r\n            userName: this.props.usersName,\r\n            coins: endResult\r\n            }).then((res) => {\r\n                console.log(res)\r\n            }).catch((err) => {\r\n                console.log(err)\r\n            })\r\n        }\r\n    }\r\n\r\n    // Compares when the player made a 50/50 bet \r\n    compareTwoTimes(num) {\r\n        // Make play buttons invisible and make bet button visible\r\n        document.getElementById('buttonsDiv').style = 'visibility: hidden';\r\n        document.getElementById('betForm').style = 'visibility: visible';\r\n\r\n        this.rollAll();\r\n        // Set the timeout to allow for the rolledNum state to be set\r\n        setTimeout(() => {this.determineOutcome2(this.state.rolledNum, num)}, 1000);\r\n    }\r\n\r\n    // Determines the outcome on a 50/50 bet\r\n    determineOutcome2(rolledNum, guessedNum) {\r\n        if ((rolledNum <= 6 && guessedNum === 6) || (rolledNum >= 7 && guessedNum === 7)) {\r\n            let endResult = this.props.coins + (this.props.wager * 2);\r\n            this.props.setCoins(endResult);\r\n\r\n            Axios.put('/user', {\r\n            userName: this.props.usersName,\r\n            coins: endResult\r\n            }).then((res) => {\r\n                console.log(res)\r\n            }).catch((err) => {\r\n                console.log(err)\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    // Compares when the player made a 1/4 bet\r\n    compareFourTimes(num) {\r\n        // Make play buttons invisible and make bet button visible\r\n        document.getElementById('buttonsDiv').style = 'visibility: hidden';\r\n        document.getElementById('betForm').style = 'visibility: visible';\r\n\r\n        this.rollAll();\r\n        // Set the timeout to allow for the rolledNum state to be set\r\n        setTimeout(() => {this.determineOutcome3(this.state.rolledNum, num)}, 1000);\r\n    }\r\n\r\n    // Determines the outcome for a 4x bet\r\n    determineOutcome3(rolledNum, guessedNum) {\r\n        let endResult = this.props.coins;\r\n\r\n        if (rolledNum <= 3 && guessedNum === 3) {\r\n            console.log('between 1 and 3');\r\n            endResult = this.props.coins + (this.props.wager * 4);\r\n            this.props.setCoins(endResult);\r\n        }\r\n        else if ((rolledNum >= 4 && rolledNum <= 6) && guessedNum === 6) {\r\n            console.log('between 4 and 6');\r\n            endResult = this.props.coins + (this.props.wager * 4);\r\n            this.props.setCoins(endResult);\r\n        }\r\n        else if ((rolledNum >= 7 && rolledNum <= 9) && guessedNum === 9) {\r\n            console.log('between 7 and 9');\r\n            endResult = this.props.coins + (this.props.wager * 4);\r\n            this.props.setCoins(endResult);\r\n        }\r\n        else if (rolledNum >= 10 && guessedNum === 10) {\r\n            console.log('between 10 and 12');\r\n            endResult = this.props.coins + (this.props.wager * 4);\r\n            this.props.setCoins(endResult);\r\n        }\r\n\r\n        Axios.put('/user', {\r\n            userName: this.props.usersName,\r\n            coins: endResult\r\n            }).then((res) => {\r\n                console.log(res)\r\n            }).catch((err) => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (  \r\n          <div>\r\n            <Nav coins={this.props.coins} usersName={this.props.usersName} setUsersName={this.props.setUsersName}/>\r\n            <h1>Dice Roll</h1>\r\n            <ReactDice\r\n              numDice={2}\r\n              defaultRoll={3}\r\n              outline={true}\r\n              faceColor={'#BDBCBD'}\r\n              dotColor={'#333333'}\r\n              dieSize={120}\r\n              margin={40}\r\n              rollDone={this.rollDoneCallback}\r\n              ref={dice => this.reactDice = dice}\r\n              disableIndividual={true}\r\n              rollTime={1}\r\n            />\r\n            <form className='form-group' onSubmit={this.play}>\r\n                <div id='betForm'>\r\n                    <div className='bet-input'>\r\n                        <label className='font-weight-bold' htmlFor='bet'>Bet</label>\r\n                        <input className='form-control' name='bet' type='number' step='.01' min='.01' max={this.props.coins} onChange={this.handleWagerChange}></input>\r\n                    </div>\r\n                    <input className='btn btn-dark pl-3 pr-3 mt-2' type='submit' value='Place Bet'></input>\r\n                </div>\r\n            </form>\r\n            <div className='container' id='buttonsDiv' style={{visibility:'hidden'}}>\r\n                <div className='pt-2 pb-3 mb-2'>\r\n                    <p className='font-weight-bold'>12x Multiplier</p>\r\n                    <div className='row mb-1'>\r\n                        <button className='col-2 offset-2 btn btn-dark' onClick={() => {this.compareSingle(1)}}>1</button>\r\n                        <button className='col-2 btn btn-dark ml-1 mr-1' onClick={() => {this.compareSingle(2)}}>2</button>\r\n                        <button className='col-2 btn btn-dark mr-1' onClick={() => {this.compareSingle(3)}}>3</button>\r\n                        <button className='col-2 btn btn-dark' onClick={() => {this.compareSingle(4)}}>4</button>\r\n                    </div>\r\n                    <div className='row mb-1'>\r\n                        <button className='col-2 offset-2 btn btn-dark' onClick={() => {this.compareSingle(5)}}>5</button>\r\n                        <button className='col-2 btn btn-dark ml-1 mr-1' onClick={() => {this.compareSingle(6)}}>6</button>\r\n                        <button className='col-2 btn btn-dark mr-1' onClick={() => {this.compareSingle(7)}}>7</button>\r\n                        <button className='col-2 btn btn-dark' onClick={() => {this.compareSingle(8)}}>8</button>\r\n                    </div>\r\n                    <div className='row'>\r\n                        <button className='col-2 offset-2 btn btn-dark' onClick={() => {this.compareSingle(9)}}>9</button>\r\n                        <button className='col-2 btn btn-dark ml-1 mr-1' onClick={() => {this.compareSingle(10)}}>10</button>\r\n                        <button className='col-2 btn btn-dark mr-1' onClick={() => {this.compareSingle(11)}}>11</button>\r\n                        <button className='col-2 btn btn-dark' onClick={() => {this.compareSingle(12)}}>12</button>\r\n                    </div>\r\n                </div>\r\n                <div className='pt-2 pb-3 mb-2'>\r\n                    <p className='font-weight-bold'>4x Multiplier</p>\r\n                    <div className='row'>\r\n                        <button className='col-2 offset-2 btn btn-dark' onClick ={() => {this.compareFourTimes(3)}}>1 - 3</button>\r\n                        <button className='col-2 btn btn-dark ml-1 mr-1' onClick ={() => {this.compareFourTimes(6)}}> 4 - 6</button>\r\n                        <button className='col-2 btn btn-dark mr-1' onClick ={() => {this.compareFourTimes(9)}}>7 - 9</button>\r\n                        <button className='col-2 btn btn-dark' onClick ={() => {this.compareFourTimes(10)}}>10 - 12</button>\r\n                    </div>\r\n                </div>\r\n                <div className='pt-2 pb-3'>\r\n                    <p className='font-weight-bold'>2x Multiplier</p>\r\n                    <div className='row'>\r\n                        <button className='col-4 offset-2 btn btn-dark' onClick={() => {this.compareTwoTimes(6)}}>6 or lower</button>\r\n                        <button className='col-4 btn btn-dark ml-2' onClick={() => {this.compareTwoTimes(7)}}>7 or higher</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n}\r\n\r\n\r\n\r\nexport default Dice;","import React, {useState} from 'react';\r\nimport * as am4core from '@amcharts/amcharts4/core';\r\nimport * as am4charts from '@amcharts/amcharts4/charts';\r\nimport am4themes_dataviz from '@amcharts/amcharts4/themes/dataviz';\r\nimport am4themes_animated from '@amcharts/amcharts4/themes/animated';\r\nimport Nav from './Nav';\r\nimport Axios from 'axios';\r\n\r\n// Still need to add graphing capabiliity, coin system, and the input for the amount \r\n// of coins. Also need to style the application\r\n\r\nconst Crash = (props) => {\r\n    const [rMultiplier, setRMultipler] = useState();\r\n    const [userBet, setUserBet] = useState(0);\r\n\r\n    // Creates the round's ending multiplication factor \r\n    const createRandomNumbers = () => {\r\n        let arr = [];\r\n        for (let i = 0; i < 50; i++) {\r\n            let random1 = Math.random() * 2 + 1;\r\n            \r\n            arr.push(random1);\r\n\r\n            let random2 = Math.floor(Math.random() * 5 + 1);\r\n            \r\n\r\n            let result = random1 * random2;\r\n            arr.push(result);\r\n        }\r\n        let randomNum = Math.floor(Math.random() * 100);\r\n        let selected = arr[randomNum];\r\n\r\n        return selected;\r\n    }\r\n\r\n    // Called when the place button is hit\r\n    const play = (event) => {\r\n        // Doesn't reload page\r\n        event.preventDefault();\r\n        \r\n        // Deduct the amount of coins wagered from the total amount of coins\r\n        let currCoins = props.coins - props.wager;\r\n\r\n        Axios.put('/user', {\r\n                userName: props.usersName,\r\n                coins: currCoins\r\n            }).then((res) => {\r\n                console.log(res)\r\n            }).catch((err) => {\r\n                console.log(err)\r\n            })\r\n        \r\n        \r\n        props.setCoins(currCoins);\r\n        // Gets a random number\r\n        let random = createRandomNumbers();\r\n        // Load the chart\r\n        createChart(random);\r\n        decideGame(userBet, random); \r\n        \r\n    \r\n    }\r\n\r\n    // Function that get's the user's bet from the input\r\n    const handleMultiplierChange = (event) => {\r\n        setUserBet(event.target.value);\r\n    }\r\n\r\n    const handleWagerChange = (event) => {\r\n        props.setWager(event.target.value);\r\n    }\r\n\r\n    // Takes in the user's bet and the actual multiplier\r\n    // Then decides if the user won or lost\r\n    const decideGame = (usersPick, randomMultiplier) => {\r\n        randomMultiplier = randomMultiplier.toFixed(2);\r\n        // Sanitize the inputs\r\n        randomMultiplier = Number(randomMultiplier);\r\n        usersPick = Number(usersPick);\r\n        \r\n        setRMultipler(parseFloat(randomMultiplier).toFixed(2));\r\n        if (usersPick <= randomMultiplier) {\r\n            let result = (props.coins - props.wager) + (props.wager * userBet);\r\n            Axios.put('/user', {\r\n                userName: props.usersName,\r\n                coins: result\r\n            }).then((res) => {\r\n                console.log(res)\r\n            }).catch((err) => {\r\n                console.log(err)\r\n            })\r\n\r\n            setTimeout(() => {\r\n                props.setCoins(result);\r\n                \r\n            }, 2000);\r\n        }\r\n    }\r\n\r\n    // Function that creates the angular chart\r\n    function createChart(multFactor) {\r\n        document.getElementById('multiplierHeader').style = 'visibility: visible';\r\n        // Themes\r\n        am4core.useTheme(am4themes_dataviz);\r\n        am4core.useTheme(am4themes_animated);\r\n\r\n        // Create chart\r\n        let chart = am4core.create('chartdiv', am4charts.GaugeChart);\r\n        chart.hiddenState.properties.opacity = 0; // Initial fade in\r\n\r\n        chart.innerRadius = -25;\r\n\r\n        let axis = chart.xAxes.push(new am4charts.ValueAxis());\r\n        axis.min = 0;\r\n        axis.max = 15;\r\n        axis.strictMinMax = true;\r\n        axis.renderer.grid.template.stroke = new \r\n        am4core.InterfaceColorSet().getFor('background');\r\n        axis.renderer.grid.template.strokeOpacity = .3;\r\n\r\n        let colorSet = new am4core.ColorSet();\r\n\r\n        let range0 = axis.axisRanges.create();\r\n        range0.value = 0;\r\n        range0.endValue = 5;\r\n        range0.axisFill.fillOpacity = 1;\r\n        range0.axisFill.fill = colorSet.getIndex(0);\r\n        range0.axisFill.zIndex = -1;\r\n\r\n        let range1 = axis.axisRanges.create();\r\n        range1.value = 5;\r\n        range1.endValue = 10;\r\n        range1.axisFill.fillOpacity = 1;\r\n        range1.axisFill.fill = colorSet.getIndex(2);\r\n        range1.axisFill.zIndex = -1;\r\n\r\n        let range2 = axis.axisRanges.create();\r\n        range2.value = 10;\r\n        range2.endValue = 15;\r\n        range2.axisFill.fillOpacity = 1;\r\n        range2.axisFill.fill = colorSet.getIndex(4);\r\n        range2.axisFill.zIndex = -1;\r\n\r\n        let hand = chart.hands.push(new am4charts.ClockHand());\r\n\r\n        chart.setTimeout(randomValue, 800)\r\n\r\n        function randomValue() {\r\n            hand.showValue(multFactor, 1000, am4core.ease.cubicOut);\r\n        }\r\n    }\r\n\r\n    \r\n    return (\r\n        <div>\r\n            <Nav coins={props.coins} usersName={props.usersName} setUsersName={props.setUsersName}/>\r\n            <h1>Crash</h1>\r\n            <form className='ml-5 mr-5' onSubmit={play}>\r\n                \r\n                <div className='bet-input'>\r\n                    <label className='font-weight-bold' htmlFor='bet'>Bet</label>\r\n                    <input type='number' className='form-control' name='bet' step='.01' min={.01} required max={props.coins} onChange={handleWagerChange} id='wager'></input>\r\n                </div>    \r\n                <div className='bet-input'>\r\n                    <label className='font-weight-bold' htmlFor='multiplier'>Multiplier (2.5x Minimum)</label>\r\n                    <input type='number' className='form-control' name='multiplier' step='.1' min='2.5' required max={15} onChange={handleMultiplierChange}></input>\r\n                </div>\r\n                    \r\n                   \r\n                <input className='btn btn-dark pl-3 pr-3 mt-2' type='submit' value='Place'></input>\r\n            </form>\r\n            <h2 id='multiplierHeader' style={{visibility: 'hidden'}}>Multiplier: {rMultiplier}</h2>\r\n            <div id=\"chartdiv\" style={{width: '100%', height: '500px'}}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Crash","import React, {useState} from 'react';\r\nimport { Wheel } from 'react-custom-roulette';\r\nimport Nav from './Nav';\r\nimport Axios from 'axios';\r\n\r\nconst Roulette = (props) => {\r\n    const [mustSpin, setMustSpin] = useState(false);\r\n    const [prizeNumber, setPrizeNumber] = useState(0);\r\n\r\n\r\n    const play = (event) => {\r\n        // Doesn't reload page\r\n        event.preventDefault();\r\n        document.getElementById('buttonsDiv').style = 'visibility: visible';\r\n        document.getElementById('betForm').style = 'visibility: hidden';\r\n        // Deduct the amount of coins wagered from the total amount of coins\r\n        let currCoins = props.coins - props.wager;\r\n        props.setCoins(currCoins);\r\n\r\n        Axios.put('/user', {\r\n            userName: props.usersName,\r\n            coins: currCoins\r\n        }).then((res) => {\r\n            console.log(res)\r\n        }).catch((err) => {\r\n            console.log(err)\r\n        });\r\n    }\r\n    \r\n    const handleWagerChange = (event) => {\r\n        props.setWager(event.target.value);\r\n    }\r\n    \r\n    const data = [\r\n        { option: '0', style: { backgroundColor: 'Green', textColor: 'white'}},\r\n        { option: '32', style: { backgroundColor: 'Red', textColor: 'white'}},\r\n        { option: '15', style: { backgroundColor: 'Black', textColor: 'white'}},\r\n        { option: '19', style: { backgroundColor: 'Red', textColor: 'white'}},\r\n        { option: '4', style: { backgroundColor: 'Black', textColor: 'white'}},\r\n        { option: '21', style: { backgroundColor: 'Red', textColor: 'white'}},\r\n        { option: '2', style: { backgroundColor: 'Black', textColor: 'white'}},\r\n        { option: '25', style: { backgroundColor: 'Red', textColor: 'white'}},\r\n        { option: '17', style: { backgroundColor: 'Black', textColor: 'white'}},\r\n        { option: '34', style: { backgroundColor: 'Red', textColor: 'white'}},\r\n        { option: '6', style: { backgroundColor: 'Black', textColor: 'white'}},\r\n        \r\n        { option: '27', style: { backgroundColor: 'Red', textColor: 'white'}},\r\n        { option: '13', style: { backgroundColor: 'Black', textColor: 'white'}},\r\n        { option: '35', style: { backgroundColor: 'Red', textColor: 'white'}},\r\n        { option: '11', style: { backgroundColor: 'Black', textColor: 'white'}},\r\n        { option: '30', style: { backgroundColor: 'Red', textColor: 'white'}},\r\n        { option: '8', style: { backgroundColor: 'Black', textColor: 'white'}},\r\n        { option: '23', style: { backgroundColor: 'Red', textColor: 'white'}},\r\n        { option: '10', style: { backgroundColor: 'Black', textColor: 'white'}},\r\n\r\n        { option: '5', style: { backgroundColor: 'Red', textColor: 'white'}},\r\n        { option: '24', style: { backgroundColor: 'Black', textColor: 'white'}},\r\n        { option: '16', style: { backgroundColor: 'Red', textColor: 'white'}},\r\n        { option: '33', style: { backgroundColor: 'Black', textColor: 'white'}},\r\n        { option: '1', style: { backgroundColor: 'Red', textColor: 'white'}},\r\n        { option: '20', style: { backgroundColor: 'Black', textColor: 'white'}},\r\n        { option: '14', style: { backgroundColor: 'Red', textColor: 'white'}},\r\n        { option: '31', style: { backgroundColor: 'Black', textColor: 'white'}},\r\n        { option: '9', style: { backgroundColor: 'Red', textColor: 'white'}},\r\n        { option: '22', style: { backgroundColor: 'Black', textColor: 'white'}},\r\n        \r\n        { option: '18', style: { backgroundColor: 'Red', textColor: 'white'}},\r\n        { option: '29', style: { backgroundColor: 'Black', textColor: 'white'}},\r\n        { option: '7', style: { backgroundColor: 'Red', textColor: 'white'}},\r\n        { option: '28', style: { backgroundColor: 'Black', textColor: 'white'}},\r\n        { option: '12', style: { backgroundColor: 'Red', textColor: 'white'}},\r\n        { option: '35', style: { backgroundColor: 'Black', textColor: 'white'}},\r\n        { option: '3', style: { backgroundColor: 'Red', textColor: 'white'}},\r\n        { option: '26', style: { backgroundColor: 'Black', textColor: 'white'}},\r\n    ]\r\n\r\n    // Determines the outome and displays the amount won\r\n    const determineOutcome = (winningColor, userPick) => {\r\n        winningColor = winningColor.toUpperCase();\r\n        userPick = userPick.toUpperCase();\r\n        \r\n        if (userPick === winningColor) {\r\n            // Green multiplier = x13\r\n            if (winningColor === 'GREEN') {\r\n                setTimeout(() => {\r\n                    let endResult = props.coins + (props.wager * 13);\r\n                    props.setCoins(endResult);\r\n\r\n                    Axios.put('/user', {\r\n                        userName: props.usersName,\r\n                        coins: endResult\r\n                    }).then((res) => {\r\n                        console.log(res)\r\n                    }).catch((err) => {\r\n                        console.log(err)\r\n                    });\r\n                }, 11250);\r\n            }\r\n            // Red and black multiplier = x2\r\n            else {\r\n                setTimeout(() => {\r\n                    let endResult = props.coins + (props.wager * 2);\r\n                    props.setCoins(endResult);\r\n\r\n                    Axios.put('/user', {\r\n                        userName: props.usersName,\r\n                        coins: endResult\r\n                    }).then((res) => {\r\n                        console.log(res)\r\n                    }).catch((err) => {\r\n                        console.log(err)\r\n                    });\r\n                }, 11250);\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    const handleSpinClick = (event) => {\r\n        // Only allow a spin if the wheel is not currently spinning\r\n        if (mustSpin === false) {\r\n            document.getElementById('buttonsDiv').style = 'visibility: hidden';\r\n            document.getElementById('betForm').style = 'visibility: visible';\r\n            // Assign the user's color pick to bet state \r\n            let userPick = event.target.value;\r\n\r\n            // Generate a random number between 0 and 36\r\n            const newPrizeNumber = Math.floor(Math.random() * data.length);\r\n            // Set the new prize number\r\n            setPrizeNumber(newPrizeNumber);\r\n            // Set the new prize color\r\n            let color = data[newPrizeNumber].style.backgroundColor;\r\n            \r\n            // Determine the outcome of the spin\r\n            determineOutcome(color, userPick);\r\n            \r\n            setMustSpin(true);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Nav coins={props.coins} usersName={props.usersName} setUsersName={props.setUsersName}/>\r\n            <h1>Roulette</h1>\r\n            <div className='mt-4 mb-2'>\r\n                <Wheel\r\n                class='mx-auto'\r\n                mustStartSpinning={mustSpin}\r\n                prizeNumber={prizeNumber}\r\n                data={data}\r\n                onStopSpinning={() => {\r\n                    setMustSpin(false);\r\n                }}\r\n                ></Wheel>\r\n            </div>\r\n             <form className='form-group' onSubmit={play}>\r\n                 <div id='betForm'>\r\n                    <div className='bet-input'>\r\n                        <label className='font-weight-bold' htmlFor='bet'>Bet</label>\r\n                        <input className='form-control' name='bet' type='number'step='.01' min={.01} max={props.coins} required onChange={handleWagerChange} id='wager'></input>\r\n                    </div>\r\n                    <input className='btn btn-dark pl-3 pr-3 mt-2' type='submit' value='Place Bet'></input>\r\n                 </div>\r\n            </form>\r\n            <div id='buttonsDiv' style={{visibility: 'hidden'}}>\r\n                <button value='Red' className='btn btn-danger ml-2 mr-2' onClick={handleSpinClick}>Red (x2)</button>\r\n                <button value='Black' className='btn btn-dark  mr-2' onClick={handleSpinClick}>Black (x2)</button>\r\n                <button value='Green' className='btn btn-success' onClick={handleSpinClick}>Green (x13)</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Roulette;","import React, {useState} from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Axios from 'axios';\r\nimport '../CSS/styles.css';\r\n\r\n\r\nconst Login = (props) => {\r\n    const history = useHistory();\r\n    const [usersName, setUsersName] = useState('');\r\n    const [usersPassword, setUsersPassword] = useState('');\r\n\r\n    const loginUser = (event) => {\r\n        event.preventDefault();\r\n        if (usersName === '' || usersPassword === '') {\r\n            alert('Please Enter Your Full Credentials');\r\n        }\r\n        else {\r\n            Axios.post('/login', {\r\n                userName: usersName,\r\n                password: usersPassword \r\n            }).then((res) => {\r\n                if (res.data.length !== 0) {\r\n                    history.push('/home')\r\n                    props.setUsersName(usersName);\r\n                    props.setUserCoins(res.data[0].coins);\r\n                    console.log(res.data[0].userName);\r\n                    localStorage.setItem('user', res.data[0].userName);\r\n                }\r\n                else {\r\n                    alert('Wrong User Name/Password')\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='login-form'>\r\n            <form>\r\n                <div className='form-group'>\r\n                    <label \r\n                    htmlFor='userName' \r\n                    className='font-weight-bold'\r\n                    >User Name</label>\r\n                    <input \r\n                    type='text' \r\n                    className='form-control' \r\n                    id='userName'\r\n                    onChange={(e) => {\r\n                        setUsersName(e.target.value)\r\n                    }}></input>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label \r\n                    htmlFor='userPassword' \r\n                    className='font-weight-bold'>Password</label>\r\n                    <input type='password' \r\n                    className='form-control'\r\n                    onChange={(e) => {\r\n                        setUsersPassword(e.target.value)\r\n                    }}></input>\r\n                </div>\r\n                <button \r\n                className='btn btn-primary btn-block'\r\n                onClick={loginUser} \r\n                >Log In</button>\r\n            </form>\r\n            <div>\r\n                <div className='row'>\r\n                    <div className='offset-1 col-5'>\r\n                        <Link to='/register'>Create New Account</Link><br></br>\r\n                    </div>\r\n                    <div className='col-5'>\r\n                        <Link to='/home' \r\n                        onClick={() => \r\n                        {localStorage.setItem('user', 'Guest');\r\n                        props.setUsersName('Guest');\r\n                        Axios.post('/username', {\r\n                            userName: 'Guest'\r\n                        }).then((res) => {\r\n                            props.setUserCoins(res.data[0].coins);\r\n                        })}}\r\n                        >\r\n                        Continue as Guest\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import React, {useState} from 'react';\r\nimport Axios from 'axios';\r\nimport {useHistory} from 'react-router-dom';\r\nimport '../CSS/styles.css';\r\n\r\nconst Register = (props) => {\r\n    const [userNameReg, setUserNameReg] = useState('');\r\n    const [passwordReg, setPasswordReg] = useState('');\r\n    const [confirmPasswordReg, setConfirmPasswordReg] = useState('');\r\n    const history = useHistory();\r\n\r\n    // Sets a new user's coins balance to 500\r\n    const setNewUserCoins = () => {\r\n        props.setUserCoins(500);\r\n    }\r\n\r\n    // When the username has been verfied to be original the user can \r\n    // enter a password and then that account will be registered in the db\r\n    const registerUser = (event) => {\r\n        event.preventDefault();\r\n        setNewUserCoins();\r\n        let validCredentials = checkValidCredentials();\r\n        if (validCredentials === true) {\r\n            Axios.post('/user', {\r\n                userName: userNameReg, \r\n                password: passwordReg,\r\n                coins: 500\r\n            }).then((response) => {\r\n                console.log(response.data.userName);\r\n                localStorage.setItem('user', response.data.userName);\r\n            });\r\n            history.push('/home')\r\n            props.setUsersName(userNameReg);\r\n        }\r\n    }\r\n\r\n    // This function checks if the username that the\r\n    // user entered exists or not\r\n    const checkUsername = (e) => {\r\n        e.preventDefault();\r\n        Axios.post('/username', {\r\n            userName: userNameReg\r\n        }).then((res) => {\r\n            let existingUserName = userNameExists(res);\r\n            if (existingUserName) {\r\n                alert('User Name Already Exists. Please Enter a Different One');\r\n            }\r\n            else {\r\n                swapForms();\r\n            }\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        });\r\n        \r\n    }\r\n\r\n    // This function checks if the response data array has any data or no\r\n    const userNameExists = (res) => {\r\n        if (res.data[0]) {\r\n            // Username already exists, user can't use that name\r\n            return true\r\n        }\r\n        else {\r\n            // Username does not exist, the user can use that name\r\n            return false;\r\n        }\r\n    }\r\n\r\n    // THis function checks that the userName isn't blank and the user's passwords\r\n    // are the same\r\n    const checkValidCredentials = () => {\r\n        if (userNameReg !== '' && passwordReg !== '' && passwordReg === confirmPasswordReg) {\r\n            return true;\r\n        }\r\n        else {\r\n            if (userNameReg === '') {\r\n                alert('Please Enter a Valid User Name');\r\n            }\r\n            else if (passwordReg === '') {\r\n                alert('Please Enter a Valid Password');\r\n            }\r\n            else {\r\n                alert('Please Enter the Same Passwords');\r\n            }\r\n        }\r\n    }\r\n\r\n    // This function makes the userName form invisible and makes the \r\n    // password form visible when the password has been cleared to be available\r\n    const swapForms = () => {\r\n        document.getElementById('userNameForm').style = 'visibility: hidden';\r\n        document.getElementById('userPasswordForm').style = 'visibility: visible';\r\n    }\r\n\r\n    return (\r\n        <div className='register-form'>\r\n            <form id='userNameForm' onSubmit={checkUsername}>\r\n                <div className='form-group'>\r\n                    <label className='font-weight-bold'>Enter a User Name</label>\r\n                    <input \r\n                    type='text' \r\n                    className='form-control' \r\n                    id='userName'\r\n                    onChange={(e) => {\r\n                        setUserNameReg(e.target.value);\r\n                    }}></input>\r\n                    <input \r\n                    className='mt-3 btn btn-primary btn-block' \r\n                    type='submit' \r\n                    value='Enter'></input>\r\n                </div>\r\n            </form>\r\n            <form id='userPasswordForm' style={{visibility: 'hidden'}} onSubmit={registerUser}>\r\n                <div className='form-group'>\r\n                    <label className='font-weight-bold'>Password</label>\r\n                    <input \r\n                    type='password' \r\n                    className='form-control'\r\n                    onChange={(e) => {\r\n                        setPasswordReg(e.target.value)\r\n                    }}></input>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label className='font-weight-bold'>Confirm Password</label>\r\n                    <input \r\n                    type='password' \r\n                    className='form-control'\r\n                    onChange={(e) => {\r\n                        setConfirmPasswordReg(e.target.value)\r\n                    }}></input>\r\n                </div>\r\n                    <input \r\n                    className='btn btn-primary btn-block' \r\n                    type='submit' \r\n                    value='Log in'></input>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register;","import Nav from './Nav';\r\nimport Axios from 'axios';\r\n\r\nconst MoreCoins = (props) => {\r\n    const addCoins = () => {\r\n        let amount = Math.floor(Math.random() * 100);\r\n        console.log(amount);\r\n\r\n        let endCoins = props.coins + amount;\r\n        props.setUserCoins(endCoins)\r\n\r\n        Axios.put('/user', {\r\n            userName: props.usersName,\r\n            coins: endCoins\r\n        }).then((res) => {\r\n            console.log(res)\r\n        }).catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Nav coins={props.coins} userName={props.usersName} usersName={props.usersName} setUsersName={props.setUsersName}/>\r\n            <h1>Your Friendly Coin Bar</h1>\r\n            <button className='mt-3 btn btn-primary' onClick={addCoins}>Free Coins</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MoreCoins;","import {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport React, {useState, useEffect} from 'react';\r\nimport Home from './components/Home';\r\nimport Blackjack from './components/Blackjack';\r\nimport CoinFlip from './components/Coinflip';\r\nimport Dice from './components/Dice';\r\nimport Crash from './components/Crash';\r\nimport Roulette from './components/Roulette';\r\nimport Login from './components/Login';\r\nimport Register from './components/Register';\r\nimport MoreCoins from './components/MoreCoins';\r\nimport Axios from 'axios';\r\n\r\nconst App = () => {\r\n  const [coins, setCoins] = useState(0);\r\n  const [wager, setWager] = useState(0);\r\n  const [usersName, setUsersName] = useState();\r\n  \r\n  useEffect(() => {\r\n    console.log('using useEffect now');\r\n    const loggedInUser = localStorage.getItem('user');\r\n    if (loggedInUser) {\r\n      console.log(loggedInUser)\r\n      Axios.post('/username', {\r\n        userName: loggedInUser\r\n      }).then((res) => {\r\n        setUsersName(res.data[0].userName); // Users name\r\n        setCoins(res.data[0].coins); // Users coins\r\n      })\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n  <Router>\r\n      <Switch>\r\n        <Route exact path='/' render={props => (<Login {...props}\r\n        usersName={usersName} setUsersName={setUsersName} coins={coins} setUserCoins={setCoins}></Login>)}></Route>\r\n\r\n        <Route path='/register' render={props => (<Register {...props} \r\n        usersName={usersName} setUsersName={setUsersName} coins={coins} setUserCoins={setCoins}></Register>)}></Route>\r\n\r\n        <Route path='/morecoins' render={props => (<MoreCoins {...props} \r\n        usersName={usersName} setUsersName={setUsersName} coins={coins} setUserCoins={setCoins}></MoreCoins>)}></Route>\r\n\r\n        <Route path='/home' render={props => (<Home {...props} \r\n        coins={coins} setCoins={setCoins} wager={wager} setWager={setWager} usersName={usersName} setUsersName={setUsersName}/>)}></Route>\r\n\r\n        <Route path='/blackjack' render={props => (<Blackjack {...props} \r\n        coins={coins} setCoins={setCoins} wager={wager} setWager={setWager} usersName={usersName} setUsersName={setUsersName}/>)}></Route>\r\n\r\n        <Route path='/coinflip' render={props => (<CoinFlip {...props} \r\n        coins={coins} setCoins={setCoins} wager={wager} setWager={setWager} usersName={usersName} setUsersName={setUsersName}/>)}></Route>\r\n\r\n        <Route path='/dice' render={props => (<Dice {...props} \r\n        coins={coins} setCoins={setCoins} wager={wager} setWager={setWager} usersName={usersName} setUsersName={setUsersName}/>)}></Route>\r\n\r\n        <Route path='/crash' render={props => (<Crash {...props} \r\n        coins={coins} setCoins={setCoins} wager={wager} setWager={setWager} usersName={usersName} setUsersName={setUsersName}/>)}></Route>\r\n\r\n        <Route path='/roulette' render={props => (<Roulette {...props} \r\n        coins={coins} setCoins={setCoins} wager={wager} setWager={setWager} usersName={usersName} setUsersName={setUsersName}/>)}></Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}